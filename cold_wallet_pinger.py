"""
Cold Wallet Pinger ‚Äî –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ "—Å–ø—è—â–∏—Ö" (cold) –∫–æ—à–µ–ª—å–∫–æ–≤ Ethereum.

–ü–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö –¥–∞–≤–Ω–æ –Ω–µ –±—ã–ª–æ –∏—Å—Ö–æ–¥—è—â–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π,
–∏ –ø–∏–Ω–≥–æ–≤–∞—Ç—å –∏—Ö —á–µ—Ä–µ–∑ –≤—Ä–µ–º—è, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å, "–ø—Ä–æ—Å–Ω—É–ª–∏—Å—å" –ª–∏ –æ–Ω–∏.

–ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–∏—Ç–æ–≤, early-–∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤, –∑–∞–±—ã—Ç—ã—Ö multisig'–æ–≤.
"""

import requests
import argparse
from datetime import datetime, timedelta


ETHERSCAN_API_URL = "https://api.etherscan.io/api"


def get_transactions(address, api_key):
    params = {
        "module": "account",
        "action": "txlist",
        "address": address,
        "startblock": 0,
        "endblock": 99999999,
        "sort": "desc",
        "apikey": api_key
    }
    response = requests.get(ETHERSCAN_API_URL, params=params)
    result = response.json()
    return result.get("result", [])


def check_cold_wallet(transactions, threshold_days=180):
    for tx in transactions:
        if tx["isError"] == "0" and tx["from"].lower() == address.lower():
            timestamp = int(tx["timeStamp"])
            last_active = datetime.utcfromtimestamp(timestamp)
            delta = datetime.utcnow() - last_active
            return {
                "last_active": last_active.strftime("%Y-%m-%d"),
                "days_since": delta.days,
                "status": "cold" if delta.days > threshold_days else "active"
            }
    return {
        "last_active": "never",
        "days_since": "‚àû",
        "status": "cold"
    }


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Cold Wallet Pinger ‚Äî –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ö–æ–ª–æ–¥–Ω—ã—Ö –∫–æ—à–µ–ª—å–∫–æ–≤.")
    parser.add_argument("address", help="Ethereum-–∞–¥—Ä–µ—Å")
    parser.add_argument("api_key", help="API-–∫–ª—é—á –æ—Ç Etherscan")
    parser.add_argument("--threshold", type=int, default=180, help="–ü–æ—Ä–æ–≥ (–≤ –¥–Ω—è—Ö) –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ cold")
    args = parser.parse_args()

    address = args.address
    api_key = args.api_key

    print(f"[‚Ä¢] –ü–∏–Ω–≥—É–µ–º {address}...")

    txs = get_transactions(address, api_key)
    info = check_cold_wallet(txs, threshold_days=args.threshold)

    print("\n[‚úì] –ü–æ—Å–ª–µ–¥–Ω—è—è –∏—Å—Ö–æ–¥—è—â–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:")
    print(f"    –î–∞—Ç–∞: {info['last_active']}")
    print(f"    –ü—Ä–æ—à–ª–æ –¥–Ω–µ–π: {info['days_since']}")
    print(f"    –°—Ç–∞—Ç—É—Å: {'‚ùÑÔ∏è COLD' if info['status'] == 'cold' else 'üî• ACTIVE'}")
